services:
  broker:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
      - "9091:9091"
      - "6060:6060"
    environment:
      GRPC_SERVER_ADDRESS: "0.0.0.0:9090"
      PROMETHEUS_METRIC_ADDRESS: "0.0.0.0:9091"
      DB_SOURCE: postgresql://root:1qaz@postgres:5432/broker?sslmode=disable
      STORAGE: "POSTGRES"
      TRACER_SOURCE: jaeger:4318
      WRITE_MODE: "BATCH"
      PG_CONNECTION_POOL_SIZE: 100
      CASSANDRA_SOURCE: "cassandra"
      CASSANDRA_KEYSPACE: "bale"
      CASSANDRA_PORT: 9042
      PROFILING_SERVER_ADDRESS: ":6060"
#    depends_on:
#      cassandra:
#        condition: service_healthy
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
    networks:
      - bale

  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9093:9090"
    networks:
      - bale

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "9094:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    networks:
      - bale

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1qaz
      POSTGRES_DB: broker
    ports:
      - "9095:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bale

  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    ports:
      - "9096:9187"
    environment:
      DATA_SOURCE_URI: "postgres:5432/broker?sslmode=disable"
      DATA_SOURCE_USER: "root"
      DATA_SOURCE_PASS: "1qaz"
    networks:
      - bale

  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - bale

#  cassandra:
#    image: cassandra:latest
#    ports:
#      - "9097:9042"
#    environment:
#      - CASSANDRA_USER=admin
#      - CASSANDRA_PASSWORD=admin
#    volumes:
#      - casandra_data:/var/lib/cassandra
#    networks:
#      - bale
#    healthcheck:
#      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5

volumes:
  prometheus_data:
  grafana_data:
  postgres_data:
#  casandra_data:

networks:
  bale:
    driver: bridge
